version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - shared-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - shared-net

  order-service:
    container_name: order-service
    build:
      context: ./microservices/OrderService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - eureka-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - shared-net

  cart-service:
    container_name: cart-service
    build:
      context: ./microservices/CartService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - eureka-server
    networks:
      - shared-net

  payment-service:
    container_name: payment-service
    build:
      context: ./microservices/PaymentService
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - eureka-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - shared-net

  inventory-service:
    container_name: inventory-service
    build:
      context: ./microservices/inventoryService
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - shared-net

  eureka-server:
    build:
      context: ./Infrastructure/EurekaServer
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=false
      - EUREKA_CLIENT_FETCH-REGISTRY=false
    networks:
      - shared-net

networks:
  shared-net:
    driver: bridge
